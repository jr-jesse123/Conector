@page "/"
@using Blazorise.DataGrid
@using InfraEstrutura.Repositorios
@using core


<DataGrid @ref="gridRef" TItem="Funcionario"  Editable="true"
          Data="@funcionarios">
    <DataGridCommandColumn TItem="Funcionario">
        <DeleteCommandTemplate>
            <Button Color="Color.Danger" Clicked="()=>OnDeleteClicked(context)">Deletar</Button>
        </DeleteCommandTemplate>
    </DataGridCommandColumn>

    <DataGridColumn TItem="Funcionario" Field="@nameof(Funcionario.Nome)" Caption="Nome" Sortable="true" />
    <DataGridColumn TItem="Funcionario" Field="@nameof(Funcionario.Email)" Caption="Email" Sortable="false" />
    <DataGridColumn TItem="Funcionario" Field="@nameof(Funcionario.CPF)" Caption="CPF" Sortable="false" />

</DataGrid>


@code{
    [Inject] public IFuncionariosRepository Repo { get; set; }
    public List<Funcionario> funcionarios { get; set; }
    DataGrid<Funcionario> gridRef { get; set; }


    protected override void OnInitialized()
    {
        funcionarios = Repo.GetFuncionarios().ToList();
    }


    protected async Task OnDeleteClicked(CommandContext<Funcionario> context)
    {
        Repo.DeletarFuncionario(context.Item);
        await context.Clicked.InvokeAsync();
    }
}
<!-- todo:



    criar página de cadastro de funcionário,
    Cadastrar, Listar


    criar página de cadastro de ferramenta,

    criar página de atribuição de ferramenta à funcionário

    criar página de visualização do status atual. de ferramenta por funcionário
    criar página de visualizaçao

    criar histórico da ferramenta
 -->
<!-- funcionário:
   Nome,

     cpf


-->
<!-- obra:
    nome,

 -->
<!-- empréstimo:
    data da retirada,
    locação/obra destino,
    Devolução,

 -->
<!-- ferramenta:
   Descrição  -
    Data da Compra (precisa?) -
       Imagem da Ferramenta
    -->
