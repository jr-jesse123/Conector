@page "/ListarFerramentas"
@using Blazorise.DataGrid
@using InfraEstrutura.Repositorios
@using Almocherifado.core
@using Almocherifado.Application


    <Row>
        <Button Color="Color.Info" Disabled="PodeAlocar()" >Alocar Ferramentas Selecionadas</Button>
    </Row>


    <Row>
        <DataGrid TItem="Ferramenta" Data="Ferramentas" Filterable="true" @bind-SelectedRow="@SelectedFerramenta" 
                  SelectedRowStyling="(Ferramenta, styling) => styling.Background = Background.None"
                  RowStyling="OnRowStyling">
            <DataGridColumns>
                <DataGridCommandColumn TItem="Ferramenta">
                    <DeleteCommandTemplate>
                        <Button Color="Color.Danger" Clicked="() => OnDeleClicked(context)">Deletar Ferramenta</Button>
                    </DeleteCommandTemplate>
                </DataGridCommandColumn>

                <DataGridColumn TItem="Ferramenta" Field="@nameof(Ferramenta.NomeAbreviado)" Caption="Nome">
                    <DisplayTemplate>
                        <Text>@context.NomeAbreviado</Text>
                        <Heading Size="HeadingSize.Is6" Margin="Margin.Is2">Adquirida Em</Heading>
                        <Text>@context.DataCompra</Text>
                    </DisplayTemplate>
                </DataGridColumn>
                
                
                <DataGridColumn TItem="Ferramenta">
                    <DisplayTemplate>
                        <Text>Marca: @context.Marca</Text>
                        <Text>Modelo: @context.Modelo</Text>
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="Ferramenta" Field="@nameof(ferramenta.Marca)" Caption="Marca/Modelo">

                </DataGridColumn>

                <DataGridColumn TItem="Ferramenta" Field="@nameof(Ferramenta.FotoUrl)" Caption="Foto" Filterable="false">
                    <DisplayTemplate>
                        <Figure Size="FigureSize.Is128x128">
                            <FigureImage Source="@context.FotoUrl" />
                        </Figure>
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="Ferramenta" Field="@nameof(Ferramenta.Descrição)" Caption="Descrição" />


                <DataGridColumn TItem="Ferramenta" Field="@nameof(Ferramenta.Descrição)" Caption="Alocada?">
                    <DisplayTemplate>
                        @if (context.Emprestada)
                        {
                            @context.HistoricoEmprestimos.Where(fe => fe.DataDevolucao is null).Single().Emprestimo.Obra;
                        }
                        else
                        {
                            <Switch CheckedChanged="() => AdicionarOuRemoverFerramenta(context)"
                                    Margin="Margin.IsAuto" Size="Size.Large" TValue="bool">Selecionar Para Nova Alocação</Switch>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </Row>



@code{
       
    List<Ferramenta> FerramentasParaEmprestar = new();

    [Inject] public IFerramentaRepository repository { get; set; }
    [Inject] public IFerramentasService ferramentasService { get; set; }

    List<Ferramenta> Ferramentas { get; set; }

    private Ferramenta  ferramenta;

    public Ferramenta  SelectedFerramenta
    {
        get
        {
            return ferramenta;
        }
        set {
            ferramenta = value;
        }
    }

    protected override void OnInitialized()
    {
        Ferramentas = repository.GetallFerramentas()
            .ToList();
    }


    async Task OnDeleClicked(CommandContext<Ferramenta> context)
    {
        repository.DeletarFerramenta(context.Item);
        await context.Clicked.InvokeAsync();
    }

    bool PodeAlocar()
    {
        if (FerramentasParaEmprestar.Count > 0)
            return true;
        else
            return false;
    }

    void OnRowStyling(Ferramenta ferramenta, DataGridRowStyling styling)
    {
        if (ferramenta.Emprestada)
            styling.Background = Background.Info;
        else
            styling.Background = Background.Light;
    }

    void AdicionarOuRemoverFerramenta(Ferramenta ferramenta )
    {
        if (FerramentasParaEmprestar.Contains(ferramenta))
        {
            FerramentasParaEmprestar.Remove(ferramenta);
        }
        else
        {
            FerramentasParaEmprestar.Add(ferramenta);
        }
    }

    void teste(Ferramenta ferramenta)
    {

    }

}
