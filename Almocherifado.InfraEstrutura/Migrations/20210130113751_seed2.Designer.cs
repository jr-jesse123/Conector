// <auto-generated />
using System;
using Almocherifado.InfraEstrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Almocherifado.InfraEstrutura.Migrations
{
    [DbContext(typeof(AlmocherifadoContext))]
    [Migration("20210130113751_seed2")]
    partial class seed2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.EmprestimoNm.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Entrega")
                        .HasColumnType("TEXT");

                    b.Property<string>("FuncionarioCPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Obra")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TermoResponsabilidade")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioCPF");

                    b.ToTable("Emprestimos");
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.FerramentaNm.Ferramenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeAbreviado")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ferramentas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCompra = new DateTime(2022, 10, 12, 8, 37, 2, 222, DateTimeKind.Unspecified).AddTicks(4156),
                            Descricao = "descricaodd5401fa-3563-467c-9710-2198fbf5b35d",
                            FotoUrl = "132564796661945613.jpg",
                            Marca = "marcae5d717b0-3d8a-495d-93a6-9534deee96b1",
                            Modelo = "modelofa78ece9-17af-4159-a286-d22689357f48",
                            NomeAbreviado = "nomeAbreviado2d90f323-2bdc-4b61-8728-291ca818f666"
                        },
                        new
                        {
                            Id = 2,
                            DataCompra = new DateTime(2020, 1, 25, 11, 52, 59, 427, DateTimeKind.Unspecified).AddTicks(9085),
                            Descricao = "descricaoac83565f-332b-4098-937f-446db124181e",
                            FotoUrl = "132564796661945613.jpg",
                            Marca = "marca67a12beb-7a65-4fc8-b70d-3a4176f4c891",
                            Modelo = "modelo456cb85c-3085-4a4e-8491-1d36b6e7e379",
                            NomeAbreviado = "nomeAbreviadob347a4c6-9e48-4dcb-a925-f4c39a983de0"
                        },
                        new
                        {
                            Id = 3,
                            DataCompra = new DateTime(2020, 4, 19, 10, 28, 18, 574, DateTimeKind.Unspecified).AddTicks(3534),
                            Descricao = "descricao4071a62b-28c9-47b1-a74f-40523b3591ad",
                            FotoUrl = "132564796661945613.jpg",
                            Marca = "marca16abae4f-a17b-4b3e-9436-15fe84bd1912",
                            Modelo = "modeloec1f3f82-dbac-4a76-a06f-c5fa3e422285",
                            NomeAbreviado = "nomeAbreviado4d637626-d319-468a-8b9c-34fcd386bc01"
                        });
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.FerramentaNm.FerramentaEmprestada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmprestimoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FerramentaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmprestimoId");

                    b.HasIndex("FerramentaId");

                    b.HasIndex("Id");

                    b.ToTable("FerramentaEmprestada");
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.FuncionarioNm.Funcionario", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("CPF");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            CPF = "97995733780",
                            Email = "Melba.Carvalho14@bol.com.br",
                            Nome = "Patsy Franco"
                        },
                        new
                        {
                            CPF = "02822293619",
                            Email = "Phil_Costa@yahoo.com",
                            Nome = "Evelyn Reis"
                        },
                        new
                        {
                            CPF = "65112687991",
                            Email = "Shane.Reis51@bol.com.br",
                            Nome = "Miriam Batista"
                        },
                        new
                        {
                            CPF = "18239039081",
                            Email = "Virgil_Macedo97@hotmail.com",
                            Nome = "Renee Macedo"
                        },
                        new
                        {
                            CPF = "78481865982",
                            Email = "Bob_Xavier36@yahoo.com",
                            Nome = "Joe Martins"
                        },
                        new
                        {
                            CPF = "96498414154",
                            Email = "Eva.Pereira@gmail.com",
                            Nome = "Brett Souza"
                        },
                        new
                        {
                            CPF = "45039956347",
                            Email = "Malcolm22@hotmail.com",
                            Nome = "Wilson Pereira"
                        },
                        new
                        {
                            CPF = "16811108738",
                            Email = "Vernon_Silva96@live.com",
                            Nome = "Mamie Franco"
                        },
                        new
                        {
                            CPF = "41260628400",
                            Email = "Gabriel23@hotmail.com",
                            Nome = "Malcolm Carvalho"
                        },
                        new
                        {
                            CPF = "05511375683",
                            Email = "Virgil_Silva@yahoo.com",
                            Nome = "Frankie Barros"
                        });
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.EmprestimoNm.Emprestimo", b =>
                {
                    b.HasOne("Almocherifado.core.AgregateRoots.FuncionarioNm.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioCPF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.FerramentaNm.FerramentaEmprestada", b =>
                {
                    b.HasOne("Almocherifado.core.AgregateRoots.EmprestimoNm.Emprestimo", "Emprestimo")
                        .WithMany("FerramentasEmprestas")
                        .HasForeignKey("EmprestimoId");

                    b.HasOne("Almocherifado.core.AgregateRoots.FerramentaNm.Ferramenta", "Ferramenta")
                        .WithMany("HistoricoEmprestimos")
                        .HasForeignKey("FerramentaId");

                    b.Navigation("Emprestimo");

                    b.Navigation("Ferramenta");
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.EmprestimoNm.Emprestimo", b =>
                {
                    b.Navigation("FerramentasEmprestas");
                });

            modelBuilder.Entity("Almocherifado.core.AgregateRoots.FerramentaNm.Ferramenta", b =>
                {
                    b.Navigation("HistoricoEmprestimos");
                });
#pragma warning restore 612, 618
        }
    }
}
