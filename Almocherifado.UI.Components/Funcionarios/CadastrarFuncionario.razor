@inherits FormBase
@using BlazorInputMask


<div class="container h-100 w-100">

    <h2 class="fw-bold my-4">CADASTRO DE FUNCIONÁRIOS</h2>
    <div class="row h-100 w-100" style="margin-left: 0px; margin-right: 0px; ">

        <EditForm @ref="form" id="Form" Model="@FuncionarioInput" OnSubmit="OnSubmit">
            <FluentValidationValidator />
            <ValidationSummary></ValidationSummary>
            <div class=@formClass>
                <div class="half-contained h-100 me-5 w-100">
                    <InputGroup id="NomeInput">
                        <LabelContent>
                            <b>*</b>Nome Completo
                        </LabelContent>
                        <InvalidValidFeedBack>
                            <div class="invalid-feedback">
                                <ValidationMessage For="() => FuncionarioInput.Nome" />
                            </div>
                        </InvalidValidFeedBack>
                        <InputField>
                            <InputText id="NomeInput" required @bind-Value="@FuncionarioInput.Nome" placeholder="ex: José da silva" type="text" class="form-control" />
                        </InputField>
                    </InputGroup>

                    <InputGroup>
                        <LabelContent>
                            <b>*</b>CPF
                        </LabelContent>
                        <InvalidValidFeedBack>
                            <div class="invalid-feedback">
                                <ValidationMessage For="() => FuncionarioInput.CPF" />
                            </div>
                            @*<InputInfo Text="É necessário informar A marca da ferramenta" Tipo="InputInfoType.Invalid"></InputInfo>*@
                        </InvalidValidFeedBack>
                        <InputField>
                            <InputMask id="CPFInput" required @bind-Value="FuncionarioInput.CPF" class="form-control" placeholder="000.000.000-00" data-mask="000.000.000-00"></InputMask>
                        </InputField>
                    </InputGroup>



                    <InputGroup>
                        <LabelContent>
                            <b>*</b>Cargo
                        </LabelContent>
                        <InvalidValidFeedBack>
                            <div class="invalid-feedback">
                                <ValidationMessage For="() => FuncionarioInput.Cargo" />
                            </div>
                        </InvalidValidFeedBack>
                        <InputField>
                            <InputSelect  id="CargoInput" required @bind-Value="@FuncionarioInput.Cargo"  class="form-select" >
                                <option disabled selected value="" > Selecione o Cargo</option>
                                @foreach (var item in cargos)
                                {
                                    <option value="@item" >@item</option>
                                }
                            </InputSelect>
                        </InputField>
                    </InputGroup>


                    <InputGroup>
                        <LabelContent>
                            <b>*</b>Email
                        </LabelContent>
                        <InvalidValidFeedBack>
                            <div class="invalid-feedback">
                                <ValidationMessage For="() => FuncionarioInput.Email" />
                            </div>
                        </InvalidValidFeedBack>
                        <InputField>
                            <InputText id="EmailInput" required @bind-Value="@FuncionarioInput.Email" placeholder="exemplo@email.com" type="text" class="form-control" />
                        </InputField>
                    </InputGroup>

                </div>


                <div class="half-contained w-100 mb-5">
                    @Uploader
                    <div class="invalid-feedback">
                        <ValidationMessage For="() => FuncionarioInput.Foto" />
                    </div>
                    

                    <div id="botoes" class="w-100 d-flex justify-content-end mt-5">
                        <button @onclick="OnCancelClic" class="btn btn-outline-danger mx-4">Cancelar</button>
                        <button type="button" @onclick="OnSubmit" class="btn btn-dark">Continuar</button>
                    </div>

                </div>
            </div>
        </EditForm>
    </div>
</div>


@code{
}

@code {

}
