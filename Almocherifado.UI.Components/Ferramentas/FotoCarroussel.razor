

@code{
    string id = Guid.NewGuid().ToString().Split('-').First();
    [Parameter]
    public IEnumerable<string> LinkFotos { get; set; } = new List<string>();
    [Parameter] public EventCallback<string> OnFotoClicked { get; set; }
}



<div id="@("Indicators1" + id)" class="carousel slide d-flex align-items-center expansible" 
     data-bs-ride="carousel" style="width: 100px; height: 100px; object-fit: contain">
 
    <div class="carousel-inner" style="max-height:100px !important;">

        <div class="carousel-item active">
            <img @onclick="@(() => { if (OnFotoClicked.HasDelegate) OnFotoClicked.InvokeAsync("/" + LinkFotos.First()).Wait(); })" 
                 src="@( "/" + LinkFotos.First())" class="d-block w-100 expansible ">
        </div>

        @if (LinkFotos.Count() > 1)
        {
            @foreach (var item in LinkFotos.Skip(1))
            {
                <div class="carousel-item">
                    <img style="object-fit:contain;max-height:100px !important;"
                         src="@("/" +item)"
                         @onclick="@(() => { if (OnFotoClicked.HasDelegate) OnFotoClicked.InvokeAsync("/" + item).Wait(); })"
                         class="d-block w-100">

                    <!-- The Modal -->

                </div>
            }
        }


    </div>
    <button class="carousel-control-prev" type="button" data-bs-target="@("#Indicators1" + id)" data-bs-slide="prev">
        <span class="carousel-control-prev-icon bg-dark" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="@("#Indicators1" + id)" data-bs-slide="next">
        <span class="carousel-control-next-icon bg-dark" aria-hidden="true">

        </span>
        <span class="visually-hidden">Next</span>
    </button>
</div>